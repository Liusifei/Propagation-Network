# VGG 16-layer network convolutional finetuning
# Network modified to have smaller receptive field (128 pixels)
# and smaller stride (8 pixels) when run in convolutional mode.
#
# In this model we also change max pooling size in the first 4 layers
# from 2 to 3 while retaining stride = 2
# which makes it easier to exactly align responses at different layers.
# After DenseCRF, the model yields 72.6% performance on PASCAL VOC 2012 test set.

name: "deeplabv2-vgg16-deploy_global"

# layer {
#   name: "data_global"
#   type: "ImageSegData"
#   top: "data"
#   top: "label"
#   top: "data_dim"
#   include {
#     phase: TEST
#   }
#   transform_param {
#     mirror: false
#     crop_size: 513
#     mean_value: 104.008
#     mean_value: 116.669
#     mean_value: 122.675
#   }
#   image_data_param {
#     root_folder: "${DATA_ROOT}"
#     source: "${EXP}/list/${TEST_SET}.txt"
#     batch_size: 1
#     label_type: NONE
#   }
# }
input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 513
  dim: 513
}
# layer {
#   name: "input_global"
#   type: "Input"
#   top: "data"
#   input_param {
#     shape { dim: 1 dim: 3 dim: 513 dim: 513 }
#   }
# }
###################### DeepLab ##########################
layer {
  name: "conv1_1_global"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1_global"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2_global"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2_global"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1_global"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2_1_global"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1_global"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2_global"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2_global"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2_global"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3_1_global"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1_global"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2_global"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2_global"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3_global"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3_global"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3_global"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv4_1_global"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1_global"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2_global"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2_global"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3_global"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3_global"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4_global"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  name: "conv5_1_global"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 3
    dilation: 2
  }
}
layer {
  name: "relu5_1_global"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2_global"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 3
    dilation: 2
  }
}
layer {
  name: "relu5_2_global"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3_global"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 3
    dilation: 2
  }
}
layer {
  name: "relu5_3_global"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5_global"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

### hole = 6
layer {
  name: "fc6_1_global"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6_1"
  convolution_param {
    num_output: 1024
    pad: 6
    kernel_size: 3
    dilation: 6
  }
}
layer {
  name: "relu6_1_global"
  type: "ReLU"
  bottom: "fc6_1"
  top: "fc6_1"
}

layer {
  name: "fc7_1_global"
  type: "Convolution"
  bottom: "fc6_1"
  top: "fc7_1"
  convolution_param {
    num_output: 1024
    kernel_size: 1
  }
}
layer {
  name: "relu7_1_global"
  type: "ReLU"
  bottom: "fc7_1"
  top: "fc7_1"
}

layer {
  name: "fc8_voc12_1_global"
  type: "Convolution"
  bottom: "fc7_1"
  top: "fc8_voc12_1"
  convolution_param {
    num_output: 21
    kernel_size: 1
  }
}

### hole = 12
layer {
  name: "fc6_2_global"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6_2"
  convolution_param {
    num_output: 1024
    pad: 12
    kernel_size: 3
    dilation: 12
  }
}
layer {
  name: "relu6_2_global"
  type: "ReLU"
  bottom: "fc6_2"
  top: "fc6_2"
}

layer {
  name: "fc7_2_global"
  type: "Convolution"
  bottom: "fc6_2"
  top: "fc7_2"
  convolution_param {
    num_output: 1024
    kernel_size: 1
  }
}
layer {
  name: "relu7_2_global"
  type: "ReLU"
  bottom: "fc7_2"
  top: "fc7_2"
}
layer {
  name: "fc8_voc12_2_global"
  type: "Convolution"
  bottom: "fc7_2"
  top: "fc8_voc12_2"
  convolution_param {
    num_output: 21
    kernel_size: 1
  }
}

### hole = 18
layer {
  name: "fc6_3_global"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6_3"
  convolution_param {
    num_output: 1024
    pad: 18
    kernel_size: 3
    dilation: 18
  }
}
layer {
  name: "relu6_3_global"
  type: "ReLU"
  bottom: "fc6_3"
  top: "fc6_3"
}
layer {
  name: "fc7_3_global"
  type: "Convolution"
  bottom: "fc6_3"
  top: "fc7_3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
  }
}
layer {
  name: "relu7_3_global"
  type: "ReLU"
  bottom: "fc7_3"
  top: "fc7_3"
}
layer {
  name: "fc8_voc12_3_global"
  type: "Convolution"
  bottom: "fc7_3"
  top: "fc8_voc12_3"
  convolution_param {
    num_output: 21
    kernel_size: 1
  }
}

### hole = 24
layer {
  name: "fc6_4_global"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6_4"
  convolution_param {
    num_output: 1024
    pad: 24
    kernel_size: 3
    dilation: 24
  }
}
layer {
  name: "relu6_4_global"
  type: "ReLU"
  bottom: "fc6_4"
  top: "fc6_4"
}
layer {
  name: "fc7_4_global"
  type: "Convolution"
  bottom: "fc6_4"
  top: "fc7_4"
  convolution_param {
    num_output: 1024
    kernel_size: 1
  }
}
layer {
  name: "relu7_4_global"
  type: "ReLU"
  bottom: "fc7_4"
  top: "fc7_4"
}
layer {
  name: "fc8_voc12_4_global"
  type: "Convolution"
  bottom: "fc7_4"
  top: "fc8_voc12_4"
  convolution_param {
    num_output: 21
    kernel_size: 1
  }
}

### SUM the four branches
layer {
  bottom: "fc8_voc12_1"
  bottom: "fc8_voc12_2"
  bottom: "fc8_voc12_3"
  bottom: "fc8_voc12_4"
  top: "fc8_voc12"
  name: "fc8_voc12_global"
  type: "Eltwise"
  eltwise_param {
    operation: SUM
  }
}
## original resolution
layer {
  name: "fc8_interp_global"
  type: "Interp"
  bottom: "fc8_voc12"
  top: "fc8_interp"
  interp_param {
    zoom_factor: 8
  }
}

layer {
  name: "prob_global"
  type: "Softmax"
  bottom: "fc8_interp"
  top: "prob"
}
# layer {
#   bottom: "fc8_interp"
#   top: "fc8_interp_argmax"
#   name: "fc8_interp_argmax_global"
#   type: "ArgMax"
#   argmax_param {
#     axis: 1
#   }
# }
